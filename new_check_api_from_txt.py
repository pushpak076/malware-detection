# List of known malware API calls
known_malware_apis = ["sub_43BA20","GetCurrentDirectoryA","Process32Next","CreateToolhelp32Snapshot","ExitProcess"]

# Function to check if API calls match known malware signatures
def is_malware(api_calls):
    for api_call in api_calls:
        if api_call in known_malware_apis:
            return True
    return False

# Read API calls from the .txt file
def read_api_calls_from_file(file_path):
    with open(file_path, 'r') as file:
        api_calls = file.readlines()
    # Remove newline characters and whitespace
    api_calls = [api_call.strip() for api_call in api_calls]
    return api_calls

# Main function
def main():
    # Path to the .txt file containing extracted API calls
    #api_calls_file_path = 'C:\Users\PUSHPAK PATEL\OneDrive - NITT\Desktop\info sec project\extracted_api_calls.txt'
    #api_calls_file_path = r'C:\Users\PUSHPAK PATEL\OneDrive - NITT\Desktop\info sec project\extracted_api_calls.txt'
    api_calls_file_path = r'C:\Users\PUSHPAK PATEL\OneDrive - NITT\Desktop\info sec project\api_calls.txt'

    
    # Read API calls from the file
    api_calls = read_api_calls_from_file(api_calls_file_path)
    
    # Check if any API calls match known malware signatures
    if is_malware(api_calls):
        print("Malware detected!")
    else:
        print("No malware detected.")

# Run the script
if __name__ == "__main__":
    main()
